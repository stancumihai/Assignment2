// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20220427105612_first migration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Contracts.Entities.AssignmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LaboratoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.ToTable("AssignmentEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(2469),
                            Description = "Assignment1",
                            LaboratoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3067),
                            Description = "Assignment1",
                            LaboratoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3100),
                            Description = "Assignment2",
                            LaboratoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3105),
                            Description = "Assignment2",
                            LaboratoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3109),
                            Description = "Assignment3",
                            LaboratoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3117),
                            Description = "Assignment3",
                            LaboratoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3122),
                            Description = "Assignment4",
                            LaboratoryId = 4
                        },
                        new
                        {
                            Id = 8,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3127),
                            Description = "Assignment4",
                            LaboratoryId = 4
                        },
                        new
                        {
                            Id = 9,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3131),
                            Description = "Assignment5",
                            LaboratoryId = 5
                        },
                        new
                        {
                            Id = 10,
                            DeadLine = new DateTime(2022, 4, 27, 13, 56, 11, 553, DateTimeKind.Local).AddTicks(3137),
                            Description = "Assignment5",
                            LaboratoryId = 5
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.FinalResultEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("FinalResultEntities");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.GradingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("GradingEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grade = 6f,
                            SubmissionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Grade = 6f,
                            SubmissionId = 2
                        },
                        new
                        {
                            Id = 3,
                            Grade = 6f,
                            SubmissionId = 3
                        },
                        new
                        {
                            Id = 4,
                            Grade = 5f,
                            SubmissionId = 4
                        },
                        new
                        {
                            Id = 5,
                            Grade = 5f,
                            SubmissionId = 5
                        },
                        new
                        {
                            Id = 6,
                            Grade = 5f,
                            SubmissionId = 6
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.LaboratoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaboratoryNumber")
                        .HasColumnType("int");

                    b.Property<string>("Objectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LaboratoryEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 4, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Learning Architecture Laboratory 1",
                            LaboratoryNumber = 1,
                            Objectives = "Learning Architecture",
                            Title = "Laboratory 1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 4, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Learning Architecture 2 Laboratory 2",
                            LaboratoryNumber = 2,
                            Objectives = "Learning Architecture 2",
                            Title = "Laboratory 2"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Learning Architecture 3 Laboratory 3",
                            LaboratoryNumber = 3,
                            Objectives = "Learning Architecture 3",
                            Title = "Laboratory 3"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Learning Architecture 4 Laboratory 4",
                            LaboratoryNumber = 4,
                            Objectives = "Learning Architecture 4",
                            Title = "Laboratory 4"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Learning Architecture 4 Laboratory 4",
                            LaboratoryNumber = 4,
                            Objectives = "Learning Architecture 4",
                            Title = "Laboratory 4"
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolesEntities");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StudentEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "student1",
                            Group = "30231",
                            Hobby = "asd",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            FullName = "student2",
                            Group = "30231",
                            Hobby = "asd",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            FullName = "student3",
                            Group = "30231",
                            Hobby = "asd",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            FullName = "student4",
                            Group = "30231",
                            Hobby = "asd",
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            FullName = "student5",
                            Group = "30231",
                            Hobby = "asd",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.StudentLaboratoriesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LaboratoryId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentLaboratoriesEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LaboratoryId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 2,
                            LaboratoryId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            LaboratoryId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            LaboratoryId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 5,
                            LaboratoryId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 6,
                            LaboratoryId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 7,
                            LaboratoryId = 4,
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.SubmissionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Github")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("SubmissionEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentId = 1,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 2,
                            AssignmentId = 2,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            AssignmentId = 3,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            AssignmentId = 1,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 5,
                            AssignmentId = 2,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 6,
                            AssignmentId = 3,
                            Comment = "asd",
                            Github = "asd",
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "1@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 2,
                            Email = "2@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 3,
                            Email = "3@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 4,
                            Email = "4@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 5,
                            Email = "5@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 6,
                            Email = "5@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 7,
                            Email = "6@yahoo.com",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 8,
                            Email = "7@yahoo.com",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.UserRolesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRolesEntities");
                });

            modelBuilder.Entity("RoleEntityUserEntity", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleEntityUserEntity");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.AssignmentEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.LaboratoryEntity", "Laboratory")
                        .WithMany("Assignments")
                        .HasForeignKey("LaboratoryId");

                    b.Navigation("Laboratory");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.FinalResultEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.StudentEntity", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.GradingEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.SubmissionEntity", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.StudentEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.StudentLaboratoriesEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.LaboratoryEntity", "Laboratory")
                        .WithMany("StudentLaboratories")
                        .HasForeignKey("LaboratoryId");

                    b.HasOne("DataAccess.Contracts.Entities.StudentEntity", "Student")
                        .WithMany("StudentLaboratories")
                        .HasForeignKey("StudentId");

                    b.Navigation("Laboratory");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.SubmissionEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.AssignmentEntity", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId");

                    b.HasOne("DataAccess.Contracts.Entities.StudentEntity", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.UserRolesEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("DataAccess.Contracts.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoleEntityUserEntity", b =>
                {
                    b.HasOne("DataAccess.Contracts.Entities.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Contracts.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.LaboratoryEntity", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("StudentLaboratories");
                });

            modelBuilder.Entity("DataAccess.Contracts.Entities.StudentEntity", b =>
                {
                    b.Navigation("StudentLaboratories");
                });
#pragma warning restore 612, 618
        }
    }
}
